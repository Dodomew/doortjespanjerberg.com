// Small tablets (portrait view)
$screen-t-min: 768px;

// Tablets and small desktops
$screen-ds-min: 1024px;

// Large tablets and desktops
$screen-dl-min: 1280px;

// Medium devices
@mixin tablet {
    @media (min-width: #{$screen-t-min}) {
        @content;
    }
}

// Large devices
@mixin desktop-small {
    @media (min-width: #{$screen-ds-min}) {
        @content;
    }
}

// Extra large devices
@mixin desktop-large {
    @media (min-width: #{$screen-dl-min}) {
        @content;
    }
}

@mixin screenreader {
    position: absolute;
    overflow: hidden;
    height: 1px;
    width: 1px;
    clip: rect(1px, 1px, 1px, 1px);
}

.screenreader {
    @include screenreader;
}

//- Mixin: Fluid Type
///
/// Magic calc + vh to allow text to be fluid between minimum
/// and maximum breakpoints.
///
/// @group typography
/// @param {variable} $min-font-size [12px] - Minimum font size
/// @param {variable} $max-font-size [24px] - Maximum font size
/// @param {variable} $lower-range [420px] - Stop scaling font smaller at this screen resolution
/// @param {variable} $upper-range [900px] - Stop scaling font larger at this screen resolution
/// @example
///   h1 {
///     @include responsive-type(20px, 48px);
///   }
/// @site https://madebymike.com.au/writing/precise-control-responsive-typography/

@mixin responsiveFont($min-font-size: 16px, $max-font-size: 20px, $lower-range: 300px, $upper-range: 1280px) {
    font-size: calc(
        #{$min-font-size} + #{(
                ($max-font-size / ($max-font-size * 0 + 1)) - ($min-font-size / ($min-font-size * 0 + 1))
            )} * ((100vw - #{$lower-range}) / #{(
                        ($upper-range / ($upper-range * 0 + 1)) - ($lower-range / ($lower-range * 0 + 1))
                    )})
    );

    @media screen and (max-width: $lower-range) {
        font-size: $min-font-size;
    }
    @media screen and (min-width: $upper-range) {
        font-size: $max-font-size;
    }
}
